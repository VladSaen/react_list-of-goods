{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","isVisible","isReverse","sortType","showHide","setState","reverse","sortByABC","sortByLength","clearSort","this","goodsCopy","sort","el1","el2","localeCompare","length","className","type","onClick","map","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUIC,E,4MACJC,MAAe,CACbC,MAAOH,EACPI,WAAW,EACXC,WAAW,EACXC,SAAU,Q,EAGZC,SAAW,WACT,EAAKC,UAAS,SAACN,GAAD,MAAY,CAAEE,WAAYF,EAAME,e,EAGhDK,QAAU,WACR,EAAKD,UAAS,SAACN,GAAD,MAAY,CAAEG,WAAYH,EAAMG,e,EAGhDK,UAAY,WACV,EAAKF,SAAS,CAAEF,SAAU,S,EAG5BK,aAAe,WACb,EAAKH,SAAS,CAAEF,SAAU,Y,EAG5BM,UAAY,WACV,EAAKJ,SAAS,CAAEF,SAAU,U,4CAG5B,WACE,MAEIO,KAAKX,MADPC,EADF,EACEA,MAAOC,EADT,EACSA,UAAWC,EADpB,EACoBA,UAAWC,EAD/B,EAC+BA,SAEzBQ,EAAY,YAAIX,GAAOM,UAmB7B,OAjBAK,EAAUC,MAAK,SAACC,EAAKC,GACnB,OAAQX,GACN,IAAK,MACH,OAAOU,EAAIE,cAAcD,GAE3B,IAAK,SACH,OAAOD,EAAIG,OAASF,EAAIE,OAE1B,QACE,OAAO,MAITd,GACFS,EAAUL,UAIV,qBAAKW,UAAU,MAAf,SACGhB,EAEG,qCACE,wBACEiB,KAAK,SACLC,QAAST,KAAKN,SAFhB,uBAOA,oBAAIa,UAAU,OAAd,SACGN,EAAUS,KAAI,SAAAC,GAAI,OACjB,oBACEJ,UAAU,OADZ,SAIGI,GAFIA,QAOX,sBAAKJ,UAAU,OAAf,qBAEE,wBACEC,KAAK,SACLC,QAAST,KAAKH,UAFhB,gCAOA,wBACEW,KAAK,SACLC,QAAST,KAAKF,aAFhB,yBAOA,wBACEU,KAAK,SACLC,QAAST,KAAKD,UAFhB,qBAQF,wBACES,KAAK,SACLC,QAAST,KAAKJ,QAFhB,wBAQF,wBACEY,KAAK,SACLC,QAAST,KAAKN,SAFhB,6B,GA1GMkB,IAAMC,WAsHTzB,IC1If0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d4f7479f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[],\n  isVisible: boolean,\n  isReverse: boolean,\n  sortType: 'abc' | 'length' | 'none',\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    goods: goodsFromServer,\n    isVisible: true,\n    isReverse: false,\n    sortType: 'none',\n  };\n\n  showHide = () => {\n    this.setState((state) => ({ isVisible: !state.isVisible }));\n  };\n\n  reverse = () => {\n    this.setState((state) => ({ isReverse: !state.isReverse }));\n  };\n\n  sortByABC = () => {\n    this.setState({ sortType: 'abc' });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: 'length' });\n  };\n\n  clearSort = () => {\n    this.setState({ sortType: 'none' });\n  };\n\n  render() {\n    const {\n      goods, isVisible, isReverse, sortType,\n    } = this.state;\n    const goodsCopy = [...goods].reverse();\n\n    goodsCopy.sort((el1, el2) => {\n      switch (sortType) {\n        case 'abc':\n          return el1.localeCompare(el2);\n\n        case 'length':\n          return el1.length - el2.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReverse) {\n      goodsCopy.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        {isVisible\n          ? (\n            <>\n              <button\n                type=\"button\"\n                onClick={this.showHide}\n              >\n                Hide list\n              </button>\n\n              <ul className=\"list\">\n                {goodsCopy.map(item => (\n                  <li\n                    className=\"item\"\n                    key={item}\n                  >\n                    {item}\n                  </li>\n                ))}\n              </ul>\n\n              <div className=\"sort\">\n                Sort by:\n                <button\n                  type=\"button\"\n                  onClick={this.sortByABC}\n                >\n                  alphabetical order\n                </button>\n\n                <button\n                  type=\"button\"\n                  onClick={this.sortByLength}\n                >\n                  name length\n                </button>\n\n                <button\n                  type=\"button\"\n                  onClick={this.clearSort}\n                >\n                  none\n                </button>\n              </div>\n\n              <button\n                type=\"button\"\n                onClick={this.reverse}\n              >\n                reverse\n              </button>\n            </>\n          ) : (\n            <button\n              type=\"button\"\n              onClick={this.showHide}\n            >\n              Show list\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}